/*
 * Copyright 2015 HM Revenue & Customs
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import sbt.Keys._
import sbt._
import uk.gov.hmrc.DefaultBuildSettings.integrationTestSettings
import uk.gov.hmrc.ExternalService
import uk.gov.hmrc.ServiceManagerPlugin.Keys.itDependenciesList
import uk.gov.hmrc.ServiceManagerPlugin.serviceManagerSettings

val libName = "auth-client"

val scala2_12 = "2.12.18"
val scala2_13 = "2.13.12"

lazy val externalServices = List(
  ExternalService("AUTH_CLIENT_ALL")
)

ThisBuild / majorVersion     := 7
ThisBuild / isPublicArtefact := true
ThisBuild / scalaVersion     := scala2_13
ThisBuild / Test / fork      := true //Required to prevent https://github.com/sbt/sbt/issues/4609
ThisBuild / scalacOptions    += "-Wconf:src=src_managed/.*:s" // silence all warnings on autogenerated files

lazy val library = (project in file("."))
  .settings(publish / skip := true)
  .aggregate(
    authClientPlay28,
    authClientPlay29
  )

val sharedSources = Seq(
  Compile         / unmanagedSourceDirectories   += baseDirectory.value / s"../src-common/main/scala",
  Compile         / unmanagedResourceDirectories += baseDirectory.value / s"../src-common/main/resources",
  Test            / unmanagedSourceDirectories   += baseDirectory.value / s"../src-common/test/scala",
  Test            / unmanagedResourceDirectories += baseDirectory.value / s"../src-common/test/resources",
  IntegrationTest / unmanagedSourceDirectories   += baseDirectory.value / s"../src-common/it/scala"
)

lazy val authClientPlay28 = Project("auth-client-play-28", file("auth-client-play-28"))
  .enablePlugins(BuildInfoPlugin)
  .configs(IntegrationTest)
  .settings(integrationTestSettings(): _*)
  .settings(
    crossScalaVersions := Seq(scala2_12, scala2_13),
    libraryDependencies ++= BuildDependencies.shared ++ BuildDependencies.play28,
    sharedSources
  )
  .settings( //see https://github.com/sbt/sbt-buildinfo
    buildInfoKeys    := Seq[BuildInfoKey](name, version),
    buildInfoPackage := "uk.gov.hmrc.auth.clientversion"
  )
  .settings(ScoverageSettings())
  .settings(ScalariformSettings())
  .settings(serviceManagerSettings: _*)
  .settings(itDependenciesList := externalServices)

lazy val authClientPlay29 = Project("auth-client-play-29", file("auth-client-play-29"))
  .enablePlugins(BuildInfoPlugin)
  .configs(IntegrationTest)
  .settings(integrationTestSettings(): _*)
  .settings(
    crossScalaVersions := Seq(scala2_13),
    libraryDependencies ++= BuildDependencies.shared ++ BuildDependencies.play29,
    sharedSources
  )
  .settings( //see https://github.com/sbt/sbt-buildinfo
    buildInfoKeys    := Seq[BuildInfoKey](name, version),
    buildInfoPackage := "uk.gov.hmrc.auth.clientversion"
  )
  .settings(ScoverageSettings())
  .settings(ScalariformSettings())
  .settings(serviceManagerSettings: _*)
  .settings(itDependenciesList := externalServices)
